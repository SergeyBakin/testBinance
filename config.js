module.exports = {
    testnetApi: {
        hostname: 'testnet.binance.vision',
        apiV3: '/api/v3',
        api: 'https://testnet.binance.vision/api',
        ws: 'wss://testnet.binance.vision/ws',
        stream: 'wss://testnet.binance.vision/stream',
        apiKey: 'wXLgD6Z31HXRI5eP41P4DwWtvnuZkT1hircbc5xdyquudWzjWdpPfHFRlizgsbOy',
        secretKey: 'CmJzkXaJ6JOSb0U8oMdYkUWl9m19UBfwQpGuUZBoyhhFfhbWGQCJBg0Q9TZ7PrPl',
    },
    mainnetApi: {
        hostname: 'api.binance.com',
        apiV3: '/api/v3',
        api: 'https://api.binance.com/api',
        ws: 'wss://stream.binance.com:9443/ws',
        stream: 'wss://stream.binance.com:9443/stream',
    },
    aliasFieldsByEvents: {
        outboundAccountInfo: {
            e: 'eventType',
            E: 'eventTime',
            m: 'makerCommission',
            t: 'takerCommission',
            b: 'buyerCommission',
            s: 'sellerCommission',
            T: 'canTrade',
            W: 'canWithdraw',
            D: 'canDeposit',
            u: 'lastUpdateTime',
            B: 'balances',
        },
        outboundAccountPosition: {
            e: 'eventType',
            E: 'eventTime',
            u: 'lastUpdateTime',
            B: 'balances'
        },
        balances: [
            {
                a: 'asset',
                f: 'free',
                l: 'locked'
            }
        ],
        executionReport: {
            e: 'eventType',
            E: 'eventTime',
            s: 'symbol',
            c: 'newClientOrderId',
            S: 'side',
            o: 'orderType',
            f: 'cancelType',
            q: 'quantity',
            p: 'price',
            P: 'stopPrice',
            F: 'icebergQuantity',
            C: 'originalClientOrderId',
            x: 'executionType',
            X: 'orderStatus',
            r: 'rejectReason',
            i: 'orderId',
            l: 'lastTradeQuantity',
            z: 'accumulatedQuantity',
            L: 'lastTradePrice',
            n: 'commission',
            N: 'commissionAsset',
            m: 'maker',
            T: 'tradeTime',
            t: 'tradeId'
        },
        trade: {
            e: 'eventType',
            E: 'eventTime',
            s: 'symbol',
            t: 'tradeId',
            p: 'price',
            q: 'quantity',
            b: 'buyerOrderId',
            a: 'sellerOrderId',
            T: 'tradeTime',
            m: 'maker',
            M: 'ignored'
        },
        '24hrTicker': {
            e: 'eventType',
            E: 'eventTime',
            s: 'symbol',
            p: 'priceChange',
            P: 'priceChangePercent',
            w: 'weightedAveragePrice',
            x: 'previousClose',
            c: 'currentClose',
            Q: 'closeQuantity',
            b: 'bestBid',
            B: 'bestBidQuantity',
            a: 'bestAskPrice',
            A: 'bestAskQuantity',
            o: 'open',
            h: 'high',
            l: 'low',
            v: 'baseAssetVolume',
            q: 'quoteAssetVolume',
            O: 'openTime',
            C: 'closeTime',
            F: 'firstTradeId',
            L: 'lastTradeId',
            n: 'trades'
        }
    },
};